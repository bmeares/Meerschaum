version: '3.2'
volumes:
  timescaledb_volume:
  mssql_volume:
  mariadb_volume:
  mysql_volume:
  # cockroachdb_volume:
  oracle_volume:
  citus_healthcheck_volume:

services:

  timescaledb:
    environment:
      - TIMESCALEDB_TELEMETRY=off
      - POSTGRES_DB=testdb
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test1234
      - ALLOW_IP_RANGE=0.0.0.0/0
    ports:
      - 5439:5432
    volumes:
      - timescaledb_volume:/var/lib/postgresql/data
    image: timescale/timescaledb:latest-pg14-oss

  mssql:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "supersecureSECRETPASSWORD123!"
    ports:
      - 1439:1433
    image: "mcr.microsoft.com/mssql/server:2017-latest"
    volumes:
      - mssql_volume:/var/opt/mssql

  mariadb:
    environment:
      MARIADB_ROOT_PASSWORD: "my-secret-pw"
      MARIADB_USER: "test"
      MARIADB_PASSWORD: "test1234"
      MARIADB_DATABASE: "testdb"
      MARIADB_ROOT_HOST: "%"
    image: "mariadb"
    ports:
      - 3309:3306
    volumes:
      - mariadb_volume:/var/lib/mysql

  mysql:
    environment:
      MYSQL_ROOT_PASSWORD: "my-secret-pw"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "test1234"
      MYSQL_DATABASE: "testdb"
    image: "cytopia/mysql-5.7"
    ports:
      - 3310:3306
    volumes:
      - mysql_volume:/var/lib/mysql

  # cockroachdb:
    # image: cockroachdb/cockroach:v21.1.2
    # ports:
      # - 26259:26257
    # command: start-single-node --insecure
    # volumes:
      # - cockroachdb_volume:/cockroach/cockroach-data:z
  oracle:
    image: "konnecteam/docker-oracle-12c:sequelize"
    ports:
      - 1529:1521
    volumes:
      - oracle_volume:/u01/app/oracle

  citus_master:
    image: "citusdata/citus:11.0.2"
    ports:
      - 5499:5432
    labels: ["com.citusdata.role=Master"]
    environment: &CITUS_AUTH
      POSTGRES_DB: testdb
      POSTGRES_USER: test
      PGUSER: test
      POSTGRES_PASSWORD: test1234
      PGPASSWORD: test1234
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
      CITUS_HOST: citus_master

  citus_worker:
    image: "citusdata/citus:11.0.2"
    labels: ["com.citusdata.role=Worker"]
    depends_on: [citus_manager]
    command: "/wait-for-manager.sh"
    environment: *CITUS_AUTH
    volumes:
      - citus_healthcheck_volume:/healthcheck

  citus_manager:
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - citus_healthcheck_volume:/healthcheck
    depends_on: [citus_master]
    environment: *CITUS_AUTH
